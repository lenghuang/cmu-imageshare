{"version":3,"sources":["pics/default.png","pics/s20_logo.png","API/firebase.js","Carousel/generateImages.js","Carousel/slides.js","ButtonForm/uploadimage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","urlCheck","images","original","instruct","thumbnail","safeSplice","entry","img","includes","push","splice","gotData","data","pic","val","keys","Object","i","length","dict","imageURL","description","caption","date","thumbnailLabel","person","originalClass","errData","err","console","log","generateImages","database","ref","on","SlideShow","style","items","showFullscreenButton","showPlayButton","autoPlay","infinite","slideInterval","ImageUpload","handleUpload","image","state","setState","showUploadError","inputPerson","showInputError","storage","child","replace","inputCaption","put","snapshot","error","showServerError","getDownloadURL","then","url","dateString","Date","toDateString","substring","showUploadSuccess","fileText","handleFileChange","bind","handleCapChange","handlePplChange","e","this","target","value","files","name","className","Alert","variant","onClose","dismissible","paddingTop","paddingBottom","left","width","fontSize","position","Form","Row","Col","Group","onChange","controlId","Control","type","placeholder","event","File","label","lang","custom","Button","onClick","block","Component","App","src","scsday","height","alt","href","margin","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d39531e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.695b8016.png\";","module.exports = __webpack_public_path__ + \"static/media/s20_logo.8861a56c.png\";","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\n\nvar config = {\n  apiKey: \"AIzaSyCvzTRIbsUGn5LswZjEQ3S5q0n0-syCL_s\",\n  authDomain: \"sushi-7c58c.firebaseapp.com\",\n  databaseURL: \"https://sushi-7c58c.firebaseio.com/\",\n  projectId: \"sushi-7c58c\",\n  storageBucket: \"sushi-7c58c.appspot.com\",\n  messagingSenderId: \"723643017410\",\n  appId: \"1:723643017410:web:197eda27b80544d40a335b\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"../App.css\";\nimport firebase from \"../API/firebase.js\";\nimport instruct from \"../pics/default.png\";\n\n// init from \"../pics/default.png\";\n//(init, \"\", \"\"),\n\nconst urlCheck = [];\nconst images = [\n  {\n    original: instruct,\n    thumbnail: instruct\n  }\n];\n\n/*\nfunction ImageExists(url) {\n  var img = new Image();\n  img.src = url;\n  // console.log(img);\n  return img.height !== 0;\n}\n*/\n\nfunction safeSplice(entry) {\n  var img = entry.original;\n  //console.log(!urlCheck.includes(img));\n  //console.log(ImageExists(img));\n  if (!urlCheck.includes(img)) {\n    urlCheck.push(img);\n    images.splice(1, 0, entry);\n    //console.log(\"PUSHED:\");\n    //console.log(entry);\n  } else {\n    //console.log(\"REJECTED: \");\n    //console.log(entry);\n  }\n}\nfunction gotData(data) {\n  var pic = data.val();\n  var keys = Object.keys(pic);\n  for (var i = 0; i < keys.length; i++) {\n    var dict = pic[keys[i]];\n    var entry = {\n      original: dict.imageURL,\n      thumbnail: dict.imageURL,\n      description: dict.caption + \" [\" + dict.date + \"]\",\n      thumbnailLabel: dict.person,\n      originalClass: \"customimage\"\n    };\n    safeSplice(entry);\n  }\n}\n\nfunction errData(err) {\n  console.log(err);\n}\n\nfunction populateList() {\n  firebase\n    .database()\n    .ref(\"images\")\n    .on(\"value\", gotData, errData);\n}\n\nfunction generateImages() {\n  //console.log(\"BEFORE\");\n  //console.log(images);\n  populateList();\n  // console.log(\"AFTER\");\n  // console.log(images);\n  //return images.map(makeItem);\n  return images;\n}\n\nexport default generateImages;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport generateImages from \"./generateImages.js\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"../App.css\";\n\nfunction SlideShow() {\n  return (\n    <div style={{}}>\n      <ImageGallery\n        items={generateImages()}\n        showFullscreenButton={false}\n        showPlayButton={true}\n        autoPlay={false}\n        infinite={true}\n        slideInterval={5000}\n      />\n    </div>\n  );\n}\n\nexport default SlideShow;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport firebase from \"../API/firebase.js\";\n//import clarify from \"./sfw.js\";\n//import FileAlert from \"./alerts.js\";\nimport \"../App.css\";\n\nclass ImageUpload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      /*  Initial State */\n      image: null,\n      fileText: \"\",\n      inputCaption: \"\",\n      inputPerson: \"\",\n      showUploadError: false,\n      showUploadSuccess: false,\n      showInputError: false,\n      showServerError: false\n    };\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handlePplChange = this.handlePplChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleCapChange(e) {\n    this.setState({ inputCaption: e.target.value });\n  }\n  handlePplChange(e) {\n    this.setState({ inputPerson: e.target.value });\n  }\n\n  handleFileChange(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n      this.setState({ fileText: image.name });\n    }\n  }\n  handleUpload = () => {\n    const { image } = this.state;\n    if (image === null) {\n      this.setState({ showUploadError: true });\n    }\n    if (this.state.inputPerson === \"\") {\n      this.setState({ showInputError: true });\n    } else {\n      const uploadTask = firebase\n        .storage()\n        .ref()\n        .child(\n          `images/${this.state.inputPerson.replace(/[^a-zA-Z ]/g, \"\") +\n            `_` +\n            this.state.inputCaption.replace(/[^a-zA-Z ]/g, \"\")}`\n        )\n        .put(image);\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n          console.log(snapshot);\n        },\n        error => {\n          // error function ....\n          console.log(error);\n          this.setState({ showServerError: true });\n        },\n        () => {\n          const storageRef = firebase\n            .storage()\n            .ref()\n            .child(\n              `images/${this.state.inputPerson.replace(/[^a-zA-Z ]/g, \"\") +\n                `_` +\n                this.state.inputCaption.replace(/[^a-zA-Z ]/g, \"\")}`\n            );\n          // generate URL\n          storageRef.getDownloadURL().then(url => {\n            // CHECK SFW\n            // console.log(clarify(url));\n            // Get metadata\n            var dateObject = new Date();\n            var dateString = dateObject.toDateString().substring(4);\n            var data = {\n              imageURL: url,\n              caption: this.state.inputCaption,\n              person: this.state.inputPerson,\n              date: dateString\n            };\n            firebase\n              .database()\n              .ref(`images`)\n              .push(data);\n          });\n        }\n      );\n      if (!this.state.showServerError) {\n        this.setState({ showUploadSuccess: true });\n      }\n    }\n  };\n\n  render() {\n    if (this.state.showUploadError && this.state.showInputError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"warning\"\n            onClose={() =>\n              this.setState({ showUploadError: false, showInputError: false })\n            }\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO INPUTS:</b> Please use these forms to input an image\n              caption, your name, and an image!\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showUploadError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"danger\"\n            onClose={() => this.setState({ showUploadError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO IMAGE:</b> Select an image first to upload.\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showServerError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"warning\"\n            onClose={() => this.setState({ showServerError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>DID NOT UPLOAD:</b> Something went wrong with uploading the\n              image to the server. This will be fixed soon!\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showInputError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"danger\"\n            onClose={() => this.setState({ showInputError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>GUESS WHO:</b> Please put a name / nickname so we know how cool\n              you are!\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showUploadSuccess) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"success\"\n            onClose={() => this.setState({ showUploadSuccess: false })}\n            dismissible\n          >\n            {\" \"}\n            <b>SUCCESSFUL UPLOAD: </b> Scroll to see your picture in the slide\n            show :-)\n          </Alert>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ButtonContainer\">\n          <div\n            style={{\n              paddingTop: \"7vh\",\n              paddingBottom: \"2vh\",\n              left: \"30%\",\n              width: \"40%\",\n              fontSize: \"min(2.75vw,1.8vh)\",\n              position: \"relative\"\n            }}\n          >\n            <Form>\n              <Row>\n                <Col>\n                  <Form.Group\n                    onChange={this.handlePplChange}\n                    controlId=\"formPerson\"\n                  >\n                    <Form.Control type=\"text\" placeholder=\"Name\" />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form onChange={event => this.handleFileChange(event)}>\n                    <Form.File label={this.state.fileText} lang=\"en\" custom />\n                  </Form>\n                </Col>\n              </Row>\n            </Form>\n            <Row>\n              <Col>\n                <span className=\"otherForm\">\n                  <Form.Group\n                    onChange={e => this.handleCapChange(e)}\n                    controlId=\"formCaption\"\n                  >\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={\"Description (Optional)\"}\n                    />\n                  </Form.Group>\n                </span>\n              </Col>\n              <Col>\n                <Button variant=\"danger\" onClick={this.handleUpload} block>\n                  Upload\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ImageUpload;\n","import React from \"react\";\nimport SlideShow from \"./Carousel/slides.js\";\nimport ImageUpload from \"./ButtonForm/uploadimage.js\";\nimport scsday from \"./pics/s20_logo.png\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <h1>\n          CMU Image Share{\" \"}\n          <img src={scsday} style={{ height: 15 + \"vh\" }} alt=\"\" />\n        </h1>\n        <div className=\"intro\">\n          {\" \"}\n          A platform to see and share the daily happenings of fellow{\" \"}\n          <a href=\"https://www.youtube.com/watch?v=nyHnU123Iew\">\n            Carnegie Mellon Students\n          </a>\n          . Hit arrows on the sides to scroll through images and the bottom\n          right to autoplay! Upload your pictures below!\n        </div>\n      </div>\n      <SlideShow />\n      <ImageUpload />\n      <div className=\"footer\">\n        <div\n          style={{\n            margin: \"0 auto\",\n            width: \"40vw\",\n            color: \"rgb(255, 109, 109)\",\n            position: \"relative\",\n            paddingBottom: \"4vh\"\n          }}\n        >\n          {\" \"}\n          <b>DISCLAIMER: </b> Uploaded pictures are publicly visible. By\n          uploading, you agree that you have permission to redistribute this\n          photo from any involved party, including but not limited to: photo\n          creator, people in the photo, people associated with the photo, etc.\n        </div>\n        <a href=\"https://github.com/lenghuang/cmu-imageshare\">\n          Made by Len Huang &copy; March 2020\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}