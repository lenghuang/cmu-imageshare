{"version":3,"sources":["pics/leftarrow.png","pics/rightarrow.png","pics/default.png","pics/s20_logo.png","Firebase/firebase.js","Carousel/generateImages.js","Carousel/slides.js","ButtonForm/uploadimage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","images","init","safePush","img","L","includes","url","Image","src","height","ImageExists","push","gotData","data","pic","val","keys","Object","i","length","imageURL","errData","err","console","log","makeItem","Carousel","Item","className","alt","generateImages","database","ref","on","map","SlideShow","useState","index","setIndex","activeIndex","onSelect","selectedIndex","e","nextIcon","React","createElement","right","style","prevIcon","left","ImageUpload","handleUpload","image","state","setState","showUploadError","showUploadSuccess","storage","child","name","put","snapshot","error","getDownloadURL","then","caption","person","fileText","handleChange","bind","target","files","this","Alert","variant","onClose","dismissible","paddingTop","paddingBottom","width","fontSize","position","Form","onChange","event","File","label","lang","custom","Button","onClick","Component","App","scsday","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.535f382a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftarrow.c40e72ca.png\";","module.exports = __webpack_public_path__ + \"static/media/rightarrow.9fd9462d.png\";","module.exports = __webpack_public_path__ + \"static/media/default.695b8016.png\";","module.exports = __webpack_public_path__ + \"static/media/s20_logo.8861a56c.png\";","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\n\nvar config = {\n  apiKey: \"AIzaSyCvzTRIbsUGn5LswZjEQ3S5q0n0-syCL_s\",\n  authDomain: \"sushi-7c58c.firebaseapp.com\",\n  databaseURL: \"https://sushi-7c58c.firebaseio.com/\",\n  projectId: \"sushi-7c58c\",\n  storageBucket: \"sushi-7c58c.appspot.com\",\n  messagingSenderId: \"723643017410\",\n  appId: \"1:723643017410:web:197eda27b80544d40a335b\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"../App.css\";\nimport firebase from \"../Firebase/firebase.js\";\nimport init from \"../pics/default.png\";\n\nconst images = [\n  init,\n  \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F73212175_1182813895246272_1156546173536829440_n.jpg?alt=media&token=4cb6aa34-3c68-4869-8d6c-52cba2a9b126\",\n  \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F29B72064-4FA9-4E10-8BA7-6C8D0512AD19.jpeg?alt=media&token=8d9d03b1-0718-4534-8571-9353e8be96cb\"\n];\n\nfunction ImageExists(url) {\n  var img = new Image();\n  img.src = url;\n  return img.height !== 0;\n}\n\nfunction safePush(img, L) {\n  if (!L.includes(img) && ImageExists(img)) {\n    L.push(img);\n  }\n}\n\nfunction gotData(data) {\n  var pic = data.val();\n  var keys = Object.keys(pic);\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    var url = pic[k].imageURL;\n    safePush(url, images);\n  }\n}\n\nfunction errData(err) {\n  console.log(err);\n}\n\nfunction populateList() {\n  firebase\n    .database()\n    .ref(\"images\")\n    .on(\"value\", gotData, errData);\n}\n\nfunction makeItem(img) {\n  return (\n    <Carousel.Item>\n      <img className=\"slideshow\" src={img} alt=\"\" />\n    </Carousel.Item>\n  );\n}\n\nfunction generateImages() {\n  populateList();\n  console.log(images);\n  return images.map(makeItem);\n}\n\nexport default generateImages;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState } from \"react\";\nimport left from \"../pics/leftarrow.png\";\nimport right from \"../pics/rightarrow.png\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport generateImages from \"./generateImages.js\";\nimport \"../App.css\";\n\nfunction SlideShow() {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  return (\n    <div className=\"carousel\">\n      <Carousel\n        activeIndex={index}\n        onSelect={handleSelect}\n        nextIcon={React.createElement(\"img\", {\n          src: right,\n          style: { height: \"min(12vh,10vw)\" }\n        })}\n        prevIcon={React.createElement(\"img\", {\n          src: left,\n          style: { height: \"min(12vh,10vw)\" }\n        })}\n      >\n        {generateImages()}\n      </Carousel>\n    </div>\n  );\n}\n\nexport default SlideShow;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport firebase from \"../Firebase/firebase.js\";\n//import FileAlert from \"./alerts.js\";\nimport \"../App.css\";\n\nclass ImageUpload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      /*  Initial State */\n      image: null,\n      fileText: \"Find an image...\",\n      showUploadError: false,\n      showUploadSuccess: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n      this.setState({ fileText: image.name });\n    }\n  }\n  handleUpload = () => {\n    const { image } = this.state;\n    if (image === null) {\n      console.log(\"Enter alert branch\");\n      this.setState({ showUploadError: true });\n    } else {\n      this.setState({ showUploadError: false });\n      this.setState({ showUploadSuccess: true });\n      const uploadTask = firebase\n        .storage()\n        .ref()\n        .child(`images/${image.name}`)\n        .put(image);\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n          console.log(snapshot);\n        },\n        error => {\n          // error function ....\n          console.log(error);\n        },\n        () => {\n          // generate URL\n          firebase\n            .storage()\n            .ref(`images`)\n            .child(image.name)\n            .getDownloadURL()\n            .then(url => {\n              console.log(url);\n              // Store in database\n              var data = {\n                imageURL: url,\n                caption: \"Default Caption\",\n                person: \"John Doe\"\n              };\n              firebase\n                .database()\n                .ref(`images`)\n                .push(data);\n            });\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.state.showUploadError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"danger\"\n            onClose={() => this.setState({ showUploadError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO IMAGE:</b> Select an image first to upload.\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showUploadSuccess) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"success\"\n            onClose={() => this.setState({ showUploadSuccess: false })}\n            dismissible\n          >\n            {\" \"}\n            <b>SUCCESSFUL UPLOAD: </b> Scroll to see your picture in the slide\n            show :-)\n          </Alert>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ButtonContainer\">\n          <div\n            style={{\n              paddingTop: \"7vh\",\n              paddingBottom: \"2vh\",\n              left: \"30%\",\n              width: \"40%\",\n              fontSize: \"min(2.75vw,1.8vh)\",\n              position: \"relative\"\n            }}\n          >\n            <Form onChange={event => this.handleChange(event)}>\n              <Form.File label={this.state.fileText} lang=\"en\" custom />\n            </Form>\n          </div>\n          <div style={{ position: \"relative\" }}>\n            <Button variant=\"secondary\" onClick={this.handleUpload}>\n              <span style={{ fontSize: \"min(2.75vw,1.8vh)\" }}>\n                {\" \"}\n                Click Here To Upload{\" \"}\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ImageUpload;\n","import React from \"react\";\nimport SlideShow from \"./Carousel/slides.js\";\nimport ImageUpload from \"./ButtonForm/uploadimage.js\";\nimport scsday from \"./pics/s20_logo.png\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <h1>\n          SCS Image Share{\" \"}\n          <img src={scsday} style={{ height: 15 + \"vh\" }} alt=\"\" />\n        </h1>\n      </div>\n      <SlideShow />\n      <ImageUpload />\n      <div className=\"footer\">\n        <p>\n          {\" \"}\n          <a href=\"https://github.com/lenghuang/image2023\">\n            Made by Len Huang &copy; March 2020\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}