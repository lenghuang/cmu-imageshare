{"version":3,"sources":["pics/leftarrow.png","pics/rightarrow.png","pics/s20_logo.png","Firebase/firebase.js","Carousel/generateImages.js","Carousel/slides.js","ButtonForm/uploadimage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","urlCheck","images","url","caption","person","safePush","entry","img","includes","Image","src","height","ImageExists","push","gotData","data","pic","val","keys","Object","i","length","dict","imageURL","errData","err","console","log","makeItem","Carousel","Item","className","alt","Caption","generateImages","database","ref","on","map","SlideShow","useState","index","setIndex","activeIndex","onSelect","selectedIndex","e","nextIcon","React","createElement","right","style","prevIcon","left","ImageUpload","handleUpload","image","state","setState","showUploadError","inputCaption","inputPerson","showInputError","showUploadSuccess","storage","child","replace","put","snapshot","error","showServerError","getDownloadURL","then","fileText","handleFileChange","bind","handleCapChange","handlePplChange","this","target","value","files","name","Alert","variant","onClose","dismissible","paddingTop","paddingBottom","width","fontSize","position","Form","Row","Col","Group","onChange","controlId","Control","placeholder","event","File","label","lang","custom","Button","onClick","block","Component","App","scsday","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.198b8cf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftarrow.c40e72ca.png\";","module.exports = __webpack_public_path__ + \"static/media/rightarrow.9fd9462d.png\";","module.exports = __webpack_public_path__ + \"static/media/s20_logo.8861a56c.png\";","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\n\nvar config = {\n  apiKey: \"AIzaSyCvzTRIbsUGn5LswZjEQ3S5q0n0-syCL_s\",\n  authDomain: \"sushi-7c58c.firebaseapp.com\",\n  databaseURL: \"https://sushi-7c58c.firebaseio.com/\",\n  projectId: \"sushi-7c58c\",\n  storageBucket: \"sushi-7c58c.appspot.com\",\n  messagingSenderId: \"723643017410\",\n  appId: \"1:723643017410:web:197eda27b80544d40a335b\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"../App.css\";\nimport firebase from \"../Firebase/firebase.js\";\n\n// init from \"../pics/default.png\";\n//(init, \"\", \"\"),\n\nconst urlCheck = [\n  \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F73212175_1182813895246272_1156546173536829440_n.jpg?alt=media&token=4cb6aa34-3c68-4869-8d6c-52cba2a9b126\",\n  \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F29B72064-4FA9-4E10-8BA7-6C8D0512AD19.jpeg?alt=media&token=8d9d03b1-0718-4534-8571-9353e8be96cb\"\n];\nconst images = [\n  {\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/default%2Fdefault.png?alt=media&token=a6fba805-0145-44df-ad06-c011f1eaec04\",\n    caption: \"\",\n    person: \"\"\n  },\n  {\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F73212175_1182813895246272_1156546173536829440_n.jpg?alt=media&token=4cb6aa34-3c68-4869-8d6c-52cba2a9b126\",\n    caption: \"Halloween\",\n    person: \"Gary Aldrich\"\n  },\n  {\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/sushi-7c58c.appspot.com/o/images%2F29B72064-4FA9-4E10-8BA7-6C8D0512AD19.jpeg?alt=media&token=8d9d03b1-0718-4534-8571-9353e8be96cb\",\n    caption: \"MCCC Boys\",\n    person: \"Lucy Gao\"\n  }\n];\n\nfunction ImageExists(url) {\n  var img = new Image();\n  img.src = url;\n  return img.height !== 0;\n}\n\nfunction safePush(entry) {\n  var img = entry.url;\n  if (!urlCheck.includes(img) && ImageExists(img)) {\n    urlCheck.push(img);\n    images.push(entry);\n    //console.log(\"PUSHED: \" + entry);\n  }\n}\n\nfunction gotData(data) {\n  var pic = data.val();\n  var keys = Object.keys(pic);\n  for (var i = 0; i < keys.length; i++) {\n    var dict = pic[keys[i]];\n    var entry = {\n      url: dict.imageURL,\n      caption: dict.caption,\n      person: dict.person\n    };\n    safePush(entry);\n  }\n}\n\nfunction errData(err) {\n  console.log(err);\n}\n\nfunction populateList() {\n  firebase\n    .database()\n    .ref(\"images\")\n    .on(\"value\", gotData, errData);\n}\n\nfunction makeItem(entry) {\n  return (\n    <Carousel.Item>\n      <img className=\"slideshow\" src={entry.url} alt=\"\" />\n      <Carousel.Caption>\n        <h3>{entry.caption}</h3>\n        <p>Submitted By: {entry.person}</p>\n      </Carousel.Caption>\n    </Carousel.Item>\n  );\n}\n\nfunction generateImages() {\n  populateList();\n  //console.log(images);\n  return images.map(makeItem);\n}\n\nexport default generateImages;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState } from \"react\";\nimport left from \"../pics/leftarrow.png\";\nimport right from \"../pics/rightarrow.png\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport generateImages from \"./generateImages.js\";\nimport \"../App.css\";\n\nfunction SlideShow() {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  return (\n    <div className=\"carousel\">\n      <Carousel\n        activeIndex={index}\n        onSelect={handleSelect}\n        nextIcon={React.createElement(\"img\", {\n          src: right,\n          style: { height: \"min(12vh,10vw)\" }\n        })}\n        prevIcon={React.createElement(\"img\", {\n          src: left,\n          style: { height: \"min(12vh,10vw)\" }\n        })}\n      >\n        {generateImages()}\n      </Carousel>\n    </div>\n  );\n}\n\nexport default SlideShow;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport firebase from \"../Firebase/firebase.js\";\n//import FileAlert from \"./alerts.js\";\nimport \"../App.css\";\n\nclass ImageUpload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      /*  Initial State */\n      image: null,\n      fileText: \"Find an image...\",\n      inputCaption: \"\",\n      inputPerson: \"\",\n      showUploadError: false,\n      showUploadSuccess: false,\n      showInputError: false,\n      showServerError: false\n    };\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handlePplChange = this.handlePplChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleCapChange(e) {\n    this.setState({ inputCaption: e.target.value });\n  }\n  handlePplChange(e) {\n    this.setState({ inputPerson: e.target.value });\n  }\n\n  handleFileChange(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n      this.setState({ fileText: image.name });\n    }\n  }\n  handleUpload = () => {\n    const { image } = this.state;\n    if (image === null) {\n      this.setState({ showUploadError: true });\n    }\n    if (this.state.inputCaption === \"\" && this.state.inputPerson === \"\") {\n      this.setState({ showInputError: true });\n    } else {\n      this.setState({ showUploadSuccess: true });\n      const uploadTask = firebase\n        .storage()\n        .ref()\n        .child(\n          `images/${this.state.inputPerson.replace(/[^a-zA-Z ]/g, \"\") +\n            `_` +\n            this.state.inputCaption.replace(/[^a-zA-Z ]/g, \"\")}`\n        )\n        .put(image);\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n          console.log(snapshot);\n        },\n        error => {\n          // error function ....\n          console.log(error);\n          this.setState({ showServerError: true });\n        },\n        () => {\n          // generate URL\n          firebase\n            .storage()\n            .ref()\n            .child(\n              `images/${this.state.inputPerson.replace(/[^a-zA-Z ]/g, \"\") +\n                `_` +\n                this.state.inputCaption.replace(/[^a-zA-Z ]/g, \"\")}`\n            )\n            .getDownloadURL()\n            .then(url => {\n              console.log(url);\n              console.log(this.state.inputCaption);\n              // Store in database\n              var data = {\n                imageURL: url,\n                caption: this.state.inputCaption,\n                person: this.state.inputPerson\n              };\n              firebase\n                .database()\n                .ref(`images`)\n                .push(data);\n            });\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.state.showUploadError && this.state.showInputError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"warning\"\n            onClose={() =>\n              this.setState({ showUploadError: false, showInputError: false })\n            }\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO INPUTS:</b> Please use these forms to input an image\n              caption, your name, and an image!\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showUploadError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"danger\"\n            onClose={() => this.setState({ showUploadError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO IMAGE:</b> Select an image first to upload.\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showServerError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"warning\"\n            onClose={() => this.setState({ showServerError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>DID NOT UPLOAD:</b> Something went wrong with uploading the\n              image to the server. This will be fixed soon!\n            </div>\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showUploadSuccess) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"success\"\n            onClose={() => this.setState({ showUploadSuccess: false })}\n            dismissible\n          >\n            {\" \"}\n            <b>SUCCESSFUL UPLOAD: </b> Scroll to see your picture in the slide\n            show :-)\n          </Alert>\n        </div>\n      );\n    } else if (this.state.showInputError) {\n      return (\n        <div className=\"Alert\">\n          <Alert\n            variant=\"danger\"\n            onClose={() => this.setState({ showInputError: false })}\n            dismissible\n          >\n            <div className=\"alertText\">\n              {\" \"}\n              <b>NO TEXT:</b> Please input a description/caption for your image,\n              as well as your name/nickname.\n            </div>\n          </Alert>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ButtonContainer\">\n          <div\n            style={{\n              paddingTop: \"7vh\",\n              paddingBottom: \"2vh\",\n              left: \"30%\",\n              width: \"40%\",\n              fontSize: \"min(2.75vw,1.8vh)\",\n              position: \"relative\"\n            }}\n          >\n            <Form>\n              <Row>\n                <Col>\n                  <Form.Group\n                    onChange={e => this.handleCapChange(e)}\n                    controlId=\"formCaption\"\n                  >\n                    <Form.Control placeholder=\"Enter Caption\" />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group\n                    onChange={this.handlePplChange}\n                    controlId=\"formPerson\"\n                  >\n                    <Form.Control placeholder=\"Enter Your Name / Alias\" />\n                  </Form.Group>\n                </Col>\n              </Row>\n            </Form>\n            <Row>\n              <Col>\n                <Form onChange={event => this.handleFileChange(event)}>\n                  <Form.File label={this.state.fileText} lang=\"en\" custom />\n                </Form>\n              </Col>\n              <Col>\n                <Button variant=\"secondary\" onClick={this.handleUpload} block>\n                  <span style={{ fontSize: \"min(2.75vw,1.8vh)\" }}>\n                    {\" \"}\n                    Click Here To Upload{\" \"}\n                  </span>\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ImageUpload;\n","import React from \"react\";\nimport SlideShow from \"./Carousel/slides.js\";\nimport ImageUpload from \"./ButtonForm/uploadimage.js\";\nimport scsday from \"./pics/s20_logo.png\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <h1>\n          SCS Image Share{\" \"}\n          <img src={scsday} style={{ height: 15 + \"vh\" }} alt=\"\" />\n        </h1>\n      </div>\n      <SlideShow />\n      <ImageUpload />\n      <div className=\"footer\">\n        <p>\n          {\" \"}\n          <a href=\"https://github.com/lenghuang/cmu-imageshare\">\n            Made by Len Huang &copy; March 2020\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}